#!/bin/bash
set -euo pipefail

script_dir=`dirname $0`
script_name=`basename $0`

version=$(python $script_dir/find_sv_genome.py --version)

function usage {
	echo $script_name $version
	echo
	echo "Usage: $script_name <type> [options]" 
	echo "<type>:"
	echo "genome - find structural variants from genome assembly"
	echo "fusion - find gene fusions, indels, PTDs, ITDs from transcriptome assembly"
	echo "splice - find novel splice variants and report transcript/exon mappings from transcriptome assembly"
	echo
	echo "[options]: $script_name <type> [-h|--help]"
}

if [ $# -gt 0 ]; then
	sample=$1
	shift
else
	usage
	exit 1
fi

args=("$@")

if [ $sample = "fusion" ]; then
	if [[ $# -eq 0 || ( $# -eq 1 && ( "${args[0]}" = "--help" || "${args[0]}" = "-h" ) ) ]]; then
		msg=$(python $script_dir/find_sv_transcriptome.py --help);
		echo "$msg" | sed 's/find_sv_transcriptome.py/pavfinder fusion/';
	else
		python $script_dir/find_sv_transcriptome.py $@
	fi
elif [ $sample = "splice" ]; then
    if [[ $# -eq 0 || ( $# -eq 1 && ( "${args[0]}" = "--help" || "${args[0]}" = "-h" ) ) ]]; then
		msg=$(python $script_dir/map_splice.py --help);
		echo "$msg" | sed 's/map_splice.py/pavfinder splice/';
	else
		python $script_dir/map_splice.py $@
	fi
elif [ $sample = "genome" ]; then
	if [[ $# -eq 0 || ( $# -eq 1 && ( "${args[0]}" = "--help" || "${args[0]}" = "-h" ) ) ]]; then
		msg=$(python $script_dir/find_sv_genome.py --help);
		echo "$msg" | sed 's/find_sv_genome.py/pavfinder genome/';
	else
		python $script_dir/find_sv_genome.py $@
	fi
else
	usage
fi

